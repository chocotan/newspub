<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd	
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd" default-autowire="byName">


	<!-- 注册@Autowired @PostConstruct等注解, 但有了后面的component-scan后就不需要这个了 -->
	<!-- <context:annotation-config />   -->
	<!-- JNDI DS Example -->
    <!-- 
    <jee:jndi-lookup id="ds2" jndi-name="jdbc/monitoring" />  
    -->  
	<!-- <jdbc:embedded-database id="dataSource" type="HSQL" /> -->  
    <!-- 自动扫描并创建代理 -->
    <!--      
    <jpa:repositories base-package="jparepo" query-lookup-strategy="use-declared-query"  entity-manager-factory-ref="entityManagerFactory" 
 		transaction-manager-ref="transactionManager"/> 
    -->

	<!-- Scans within the base package of the application for @Components to configure as beans -->
	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:db.properties" />
	</bean>
	
	<!-- hibernate的entityManagerFactory -->
	<!-- 
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform" value="${db.dialect}" />
			</bean>
		</property>		
	</bean>
	 -->
	<!-- dbcp DataSource -->
	<!-- 
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>
	 -->
	<!-- spring自带的数据源 -->
	<bean id="dataSource"  
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" /> 
    </bean>
    <!-- openJpa的entityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- 配置dataSource可以覆盖下面的persistenceUnitName中的属性 -->
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="newspub" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter">
				<property name="generateDdl" value="true" />
			</bean>
		</property>
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
	</bean>

	
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
	</bean>
	 -->
	<context:annotation-config />
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- <tx:annotation-driven /> -->

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />



	<!-- 定义使用事务的方法
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	定义一个切入点，使事务在它的切入点内有效
	<aop:config>
		<aop:pointcut expression="execution(* com.ejb.bean.*Impl.*(..))"
			id="pointcut" />
		<aop:advisor pointcut-ref="pointcut" advice-ref="txAdvice" />
	</aop:config>  
	-->

	<tx:annotation-driven />

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	
</beans>
